name: Ockam Command Test

permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: SHA to test workflow
  pull_request:
    paths:
      - ".github/workflows/ockam_command.yml"
      - "**.rs"
      - "**.toml"
      - "**/Cargo.lock"
      - "**.gradle"
      - "tools/gradle/**"
      - "gradlew"
      - "gradlew.bat"
      - ".github/actions/**"

  push:
    paths:
      - ".github/workflows/ockam_command.yml"
      - "**.rs"
      - "**.toml"
      - "**/Cargo.lock"
      - "**.gradle"
      - "tools/gradle/**"
      - "gradlew"
      - "gradlew.bat"
      - ".github/actions/**"
  schedule:
    - cron: "0 1 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  ockam_command_test:
    name: Test Ockam Command
    strategy:
      fail-fast: false
      matrix:
        build: [linux_86, macos_86]
        include:
        - build: linux_86
          os: ubuntu-20.04
          rust: stable
          target: x86_64-unknown-linux-gnu
          container: "ghcr.io/build-trust/ockam-builder@sha256:61a48fb34a97b9de981f1a9a72885a6e1a0df1d486c131add220fdb26a1bd38b"
        - build: macos_86
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
          container: ""
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        with:
          ref: ${{ github.event.inputs.release_branch }}

      - name: Install Rust If Mac-OS
        if: matrix.build == 'macos_86'
        uses: dtolnay/rust-toolchain@1ce4a7352a1efe5dede2e52c75512b34256e4f44
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      - name: Build Binary
        shell: bash
        run: |
          set -x
          cargo build --bin ockam

      - name: Install Bats If Mac-OS
        if: matrix.build == 'macos_86'
        run: |
          brew tap kaos/shell
          brew install bats-assert

      # - name: Run Ockam Enroll
      #   run: |
      #     ockam_enroll_log=$(mktemp)
      #     echo | ockam enroll &>$ockam_enroll_log &
      #     sleep 4

      #     log=$(cat $ockam_enroll_log)
      #     echo "$log"
      #     regex="([A-Z]+\-[A-Z]+)"

      #     if [[ $log =~ $regex ]]; then
      #       code=${BASH_REMATCH[1]}
      #     fi

      #     if [[ -z $code ]]; then
      #       echo "Error getting OTP"
      #       exit 1
      #     fi

      #     ACTIVATION_CODE=$code python3 tools/scripts/ockam_enroll.py

      #     regex="Authority identity: .+"

      #     while true; do
      #       echo "Checking if ockam enroll is complete"
      #       log=$(cat $ockam_enroll_log)
      #       echo "$log"

      #       if [[ $log =~ $regex ]]; then
      #         break
      #       fi
      #       sleep 3
      #     done

      - name: Run Script On Mac-OS
        if: matrix.build == 'macos_86'
        working-directory: implementations/rust/ockam/ockam_command/tests
        shell: bash
        run: |
          export PATH=$PATH:$GITHUB_WORKSPACE/target/debug
          bats commands.bats

      - name: Run Script On Ubuntu
        if: matrix.build == 'linux_86'
        shell: bash
        run: |
          export PATH=$(pwd)/target/debug:$PATH;
          cd implementations/rust/ockam/ockam_command/tests;
          bats commands.bats;
