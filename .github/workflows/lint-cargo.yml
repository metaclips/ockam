name: Lint Cargo.lock

permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: SHA to test workflow
  pull_request:
    paths:
      - "**.toml"
      - "**/Cargo.lock"
  push:
    paths:
      - "**.toml"
      - "**/Cargo.lock"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint_cargo_lock:
    name: Rust - Lint Cargo.lock
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:55b60f7efe2c48c098bd52db2e9dbf0a1b6f6c7e583ff278987d2d11adea04e2
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - name: Check whether Cargo.lock is same as CI-generated Cargo.lock
        run: |
          old_hash=`sha384sum Cargo.lock`
          rm Cargo.lock
          RUSTFLAGS='--cfg tokio_unstable -Dwarnings' cargo check
          expected_hash=`sha384sum Cargo.lock`
          if [ "$old_hash" = "$expected_hash" ]; then
              echo "Cargo.lock hash matches CI-generated Cargo.lock hash"
          else
              echo "Cargo.lock hash does not match CI-generated Cargo.lock hash. Expected: $expected_hash Got: $old_hash" && exit 1
          fi
      - uses: ./.github/actions/cargo_target_dir_pre_cache
