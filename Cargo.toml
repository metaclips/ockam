[workspace]
resolver = "2"
members = [
    # This trick (where we glob workspace members with `*/src/..` or
    # `*/examples/..` — the latter being used because not all of our examples
    # have `src` directories, but they all have `examples` directories) helps
    # avoid including some obvious non-code folders. For example: folders
    # containing only gitignored contents which are leftover from a branch
    # change are typical (note that this was the motivation).
    #
    # In an ideal world, we'd have a better way to identify all rust crates, but
    # I'm not sure how — the only item that's guaranteed to be present in Rust
    # crates is `Cargo.toml`, and `cargo` is unwilling to fall for something
    # like `members = ["**/Cargo.toml/.."]`.
    "implementations/rust/ockam/*/src/..",
    "examples/rust/*/examples/..",

    "tools/ockam-hub-cli",
    "tools/docs/example_runner",
    "tools/docs/example_blocks"
]

exclude = [
    "implementations/rust/ockam/ockam_examples/WIP",
    "implementations/rust/ockam/ockam_examples/example_projects",
]


[workspace.metadata.release]
dev-version = true
push = true
tag = true
pre-release-replacements = [
  {file="CHANGELOG.md", min=0, search="Unreleased", replace="v{{version}} - {{date}}"},
  {file="README.md", min=0, search="= \".*\"", replace="= \"{{version}}\""},
]
pre-release-commit-message = "feat(rust): crate release {{date}}"
consolidate-pushes = true
consolidate-commits = true
